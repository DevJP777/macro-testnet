{"version":3,"sources":["sourceMap"],"names":["fs","require","path","prompts","generateDotEmail","_0x19dd69","_0x4532d3","_0x35b716","Error","_0x2b7e8c","_0x452838","_0x39f9ad","Set","_0x3f34e5","_0x47e2be","_0x265e2f","_0x417768","_0x182bf9","_0x29b9aa","_0x2c759c","_0x2888fa","Array","saveEmailsToFile","_0x512493","_0x362a37","_0x356e5b","_0x4e30ee","_0x4cb446","__dirname","_0x5849e2","_0x2ad61a","console","generateDotTrickEmailsViaPrompt","_0x1fa64a","_0x53debc","_0x4d5727","_0xf141ed","Number","_0x178d15","module"],"mappings":"w7CAAA,MAAMA,EAAA,CAAKC,OAAA,C,IAAA,CAAX,CACMC,IAAA,CAAOD,OAAA,C,kBAAA,CADb,CAEME,OAAA,CAAUF,OAAA,C,kBAAA,CAFhB,CAKA,SAASG,gBAAT,CAA0BC,SAA1B,CAAiCC,SAAjC,C,6BACOC,SAAA,CAAQ,kD,IACV,CAACA,SAAA,C,gBAAA,EAAWF,SAAX,C,CACJ,MAAM,IAAIG,KAAJ,C,gBAAA,CAAN,CAGD,MAAM,CAACC,SAAD,CAAYC,SAAZ,EAAsBL,SAAA,C,gBAAA,E,GAAA,CAA5B,CACMM,SAAA,CAAkB,IAAIC,GAAJ,EADxB,CAGMC,SAAA,CAAsBC,SAAD,E,CAC1B,MAAMC,SAAA,CAAS,EAAf,CAEMC,SAAA,CAAS,CAACC,SAAD,CAAQC,SAAR,G,8BACVD,SAAA,GAAUH,SAAA,C,gBAAA,C,EACbC,SAAA,C,gBAAA,EAAYG,SAAZ,EACA,O,CAGDF,SAAA,CAAOC,SAAA,C,GAAP,CAAkBC,SAAA,CAAUJ,SAAA,CAAIG,SAAJ,CAA5B,C,CACAD,SAAA,CAAOC,SAAA,C,GAAP,CAAkBC,SAAA,C,GAAA,CAAgBJ,SAAA,CAAIG,SAAJ,CAAlC,C,EATD,C,OAYAD,SAAA,C,GAAA,C,EAAA,C,CACOD,S,EAjBR,CAoBMI,SAAA,CAAkBN,SAAA,CAAmBJ,SAAnB,CApBxB,C,OAqBAU,SAAA,C,gBAAA,EAAyBC,SAAD,E,2BACvBT,SAAA,C,gBAAA,EAAoBS,SAAA,C,GAAA,CAAkBV,SAAtC,C,EADD,C,CAIOW,KAAA,C,gBAAA,EAAWV,SAAX,E,gBAAA,E,GAAA,CAAqCL,SAArC,C,EAIR,SAASgB,gBAAT,CAA0BC,SAA1B,CAAqCC,SAArC,C,6BACOC,SAAA,CAAarB,gBAAA,CAAiBmB,SAAjB,CAA4BC,SAA5B,C,CACbE,SAAA,CAAYH,SAAA,C,gBAAA,E,GAAA,E,GAAA,C,CACZI,SAAA,CAAazB,IAAA,C,gBAAA,EAAa0B,SAAb,C,IAAA,C,gBAAA,C,CAEf,CAAC5B,EAAA,C,gBAAA,EAAc2B,SAAd,C,EACJ3B,EAAA,C,WAAA,EAAa2B,SAAb,CAAyB,C,WAAE,C,IAAF,CAAzB,C,CAGD,MAAME,SAAA,CAAW3B,IAAA,C,MAAA,EAAUyB,SAAV,CAAyBJ,S,iBAAzB,CAAjB,CACMO,SAAA,CAAeL,SAAA,C,gBAAA,E,MAAA,CADrB,CAEAzB,EAAA,C,eAAA,EAAiB6B,SAAjB,CAA2BC,SAA3B,C,MAAA,C,CAEAC,OAAA,C,gBAAA,E,iBAA+CF,SAA/C,C,EAID,eAAeG,+BAAf,E,6BACC,G,CACC,MAAMC,SAAA,CAAQ,MAAM9B,OAAA,C,gBAAA,EAAc,C,SACjC,C,gBADiC,C,UAEjC,CAAW+B,SAAD,EAAW,mD,gBAAA,EAAwDA,SAAxD,G,qCAFY,CAAd,CAApB,CAKMC,SAAA,CAAS,MAAMhC,OAAA,C,gBAAA,EAAc,C,SAClC,C,sDADkC,C,UAElC,CAAWiC,SAAD,EAAYC,MAAA,C,WAAA,EAAiBA,MAAA,CAAOD,SAAP,CAAjB,GAAmCC,MAAA,CAAOD,SAAP,E,GAApC,E,gBAFa,CAAd,CALrB,CAUAd,gBAAA,CAAiBW,SAAjB,CAAwBI,MAAA,CAAOF,SAAP,CAAxB,C,EACC,MAAOG,SAAP,C,CACDP,OAAA,C,gBAAA,E,gBAAA,CAAoCO,SAAA,C,SAAA,CAApC,C,GAKFC,MAAA,C,kBAAA,EAAiB,C,iCAChB,CAAAP,+BADgB,CAAjB","sourcesContent":["const fs = require('fs')\r\nconst path = require('path')\r\nconst prompts = require('@inquirer/prompts')\r\n\r\n//DOT TRICK MAIL FOR GENERATE VARIATION MAIL\r\nfunction generateDotEmail(email, jumlah) {\r\n\tconst regex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/\r\n\tif (!regex.test(email)) {\r\n\t\tthrow new Error('Alamat email tidak valid.')\r\n\t}\r\n\r\n\tconst [localPart, domain] = email.split('@')\r\n\tconst emailVariations = new Set()\r\n\r\n\tconst generateVariations = (str) => {\r\n\t\tconst result = []\r\n\r\n\t\tconst helper = (start, current) => {\r\n\t\t\tif (start === str.length) {\r\n\t\t\t\tresult.push(current)\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\thelper(start + 1, current + str[start])\r\n\t\t\thelper(start + 1, current + '.' + str[start])\r\n\t\t}\r\n\r\n\t\thelper(0, '')\r\n\t\treturn result\r\n\t}\r\n\r\n\tconst localVariations = generateVariations(localPart)\r\n\tlocalVariations.forEach((variation) => {\r\n\t\temailVariations.add(variation + '@' + domain)\r\n\t})\r\n\r\n\treturn Array.from(emailVariations).slice(0, jumlah)\r\n}\r\n\r\n// Fungsi untuk menyimpan email ke file\r\nfunction saveEmailsToFile(baseEmail, jumlah) {\r\n\tconst variations = generateDotEmail(baseEmail, jumlah)\r\n\tconst localPart = baseEmail.split('@')[0]\r\n\tconst folderPath = path.resolve(__dirname, '..', 'data')\r\n\r\n\tif (!fs.existsSync(folderPath)) {\r\n\t\tfs.mkdirSync(folderPath, { recursive: true })\r\n\t}\r\n\r\n\tconst fileName = path.join(folderPath, `${baseEmail}.txt`)\r\n\tconst emailContent = variations.join('\\n')\r\n\tfs.writeFileSync(fileName, emailContent, 'utf8')\r\n\r\n\tconsole.log(`Variasi email telah disimpan di ${fileName}`)\r\n}\r\n\r\n// Fungsi utama untuk meminta input dari pengguna dan menjalankan proses\r\nasync function generateDotTrickEmailsViaPrompt() {\r\n\ttry {\r\n\t\tconst email = await prompts.input({\r\n\t\t\tmessage: 'Masukkan email:',\r\n\t\t\tvalidate: (input) => /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/.test(input) || 'Masukkan email yang valid.',\r\n\t\t})\r\n\r\n\t\tconst jumlah = await prompts.input({\r\n\t\t\tmessage: 'Masukkan jumlah variasi yang diinginkan:',\r\n\t\t\tvalidate: (input) => (Number.isInteger(Number(input)) && Number(input) > 0) || 'Masukkan angka yang valid dan lebih besar dari 0.',\r\n\t\t})\r\n\r\n\t\tsaveEmailsToFile(email, Number(jumlah))\r\n\t} catch (error) {\r\n\t\tconsole.error('Terjadi kesalahan:', error.message)\r\n\t}\r\n}\r\n//END OF DOT TRICK MAIL\r\n// Ekspor hanya fungsi main yang akan dijalankan\r\nmodule.exports = {\r\n\tgenerateDotTrickEmailsViaPrompt,\r\n}"]}
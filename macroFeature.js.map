{"version":3,"sources":["sourceMap"],"names":["path","require","fs","prompts","machineIdSync","macroUtils","menuOptions","mainMenu","_0xadc064","_0x45354e","hitungPenjumlahan","keluarProgram","console","userDetail","getUserDetails","getLicenseByKey","generateDotTrickEmails","generateDotTrickEmailsViaPrompt","macroFeature","_0x23ae9a","_0x5880e3","_0xa5356b","_0x565cbc","__dirname","_0x3a87f","JSON","_0x13df5d","_0x3774a3","_0x2f7694","_0x3f2a6d","_0x1335c1"],"mappings":"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","sourcesContent":["const path = require('path')\r\nconst fs = require('fs')\r\nconst prompts = require('@inquirer/prompts')\r\nconst { machineIdSync } = require('node-machine-id')\r\nconst macroUtils = require('./featureUtils/macroFeatureUtils')\r\n\r\nconst menuOptions = [\r\n\t{ name: 'Generate dot trick for Email', case: 'dottrick' },\r\n\t{ name: 'Hitung Penjumlahan', case: 'penjumlahan' },\r\n\t{ name: 'Keluar', case: 'keluar' },\r\n]\r\n\r\nasync function mainMenu() {\r\n\t// Membuat menu dinamis dari `menuOptions`\r\n\tconst choice = await prompts.select({\r\n\t\tmessage: 'Pilih salah satu opsi:',\r\n\t\tchoices: menuOptions.map((option) => ({\r\n\t\t\tvalue: option.case,\r\n\t\t\tname: `-${option.name}`,\r\n\t\t})),\r\n\t})\r\n\r\n\t// Menangani pilihan menggunakan switch case\r\n\tswitch (choice) {\r\n\t\tcase 'dottrick':\r\n\t\t\tmacroUtils.generateDotTrickEmailsViaPrompt()\r\n\t\t\tbreak\r\n\r\n\t\tcase 'penjumlahan':\r\n\t\t\tawait hitungPenjumlahan()\r\n\t\t\tbreak\r\n\r\n\t\tcase 'keluar':\r\n\t\t\tawait keluarProgram()\r\n\t\t\tbreak\r\n\r\n\t\tdefault:\r\n\t\t\tconsole.log('Pilihan tidak valid.')\r\n\t}\r\n}\r\n\r\nconst userDetail = require('./userDetail')\r\nconst { getUserDetails, getLicenseByKey } = require('./utils/apiService')\r\nconst { generateDotTrickEmails } = require('./utils/otherUtils')\r\nconst { generateDotTrickEmailsViaPrompt } = require('./featureUtils/macroFeatureUtils')\r\n\r\nasync function macroFeature() {\r\n\t// console.log('\\u001b[1m═══════════════════════════════════════════════════════════════════════════════════════\\u001b[0m')\r\n\t// console.log('\\u001b[1m                              MACRO TESTNET\\u001b[0m')\r\n\t// console.log('\\u001b[1m═══════════════════════════════════════════════════════════════════════════════════════\\u001b[0m\\n')\r\n\t// console.log(\"Want to connect? Here's how:\\n\")\r\n\t// console.log('🔹 Telegram:  [https://t.me/devjp777]')\r\n\t// console.log('🔹 Github:    [https://github.com/DevJP777/macro-testnet]')\r\n\t// console.log('\\u001b[1m═══════════════════════════════════════════════════════════════════════════════════════\\u001b[0m')\r\n\t// await delay(2000)\r\n\t// Memeriksa jika ada data kosong dalam userDetail\r\n\tif (!userDetail.gmail || !userDetail.github || !userDetail.hwid) {\r\n\t\tconsole.log('Some information is missing. Please provide the missing data.')\r\n\r\n\t\t// Minta input jika 'gmail' kosong\r\n\t\tif (!userDetail.gmail) {\r\n\t\t\tconst gmail = await prompts.input({ message: 'Please enter your Email:' })\r\n\t\t\tuserDetail.gmail = gmail.toLocaleLowerCase()\r\n\t\t}\r\n\r\n\t\t// Minta input jika 'github' kosong\r\n\t\tif (!userDetail.github) {\r\n\t\t\tconst github = await prompts.input({ message: 'Please enter your Github username:' })\r\n\t\t\tuserDetail.github = github.toLowerCase()\r\n\t\t}\r\n\r\n\t\t// Jika HWID kosong, set nilai hwid\r\n\t\tif (!userDetail.hwid) {\r\n\t\t\tconst hwid = machineIdSync()\r\n\t\t\tuserDetail.hwid = hwid\r\n\t\t}\r\n\r\n\t\t// Menyimpan data ke userDetail.js sebagai file JavaScript\r\n\t\tconst userDetailFilePath = path.join(__dirname, 'userDetail.js')\r\n\t\tconst userDetailContent = `const userDetail = ${JSON.stringify(userDetail, null, 2)};\\n\\nmodule.exports = userDetail;`\r\n\r\n\t\t// Menulis kembali ke userDetail.js\r\n\t\tfs.writeFileSync(userDetailFilePath, userDetailContent, 'utf8')\r\n\r\n\t\tconsole.log('Information has been updated!')\r\n\t} else {\r\n\t\t//console.log('All information is already provided!')\r\n\t}\r\n\ttry {\r\n\t\t// Panggil API untuk mendapatkan detail pengguna berdasarkan Gmail\r\n\t\tconst user = await getUserDetails({ gmail: userDetail.gmail })\r\n\t\t// Pengecekan jika hwid kosong\r\n\t\tif (user.hwid === '') {\r\n\t\t\tconst askLicense = await prompts.input({ message: 'Please input valid license key:' })\r\n\t\t\tconst licenseKey = askLicense\r\n\t\t\tconst checkLicense = await getLicenseByKey(licenseKey, userDetail.gmail, userDetail.hwid)\r\n\t\t\tif (checkLicense) {\r\n\t\t\t\tconsole.log('\\x1b[32m%s\\x1b[0m', 'License valid! Your account is now active.')\r\n\t\t\t}\r\n\t\t\t// Lakukan tindakan sesuai keinginan Anda jika HWID kosong\r\n\t\t} else {\r\n\t\t\tif (user.hwid === userDetail.hwid) {\r\n\t\t\t\tconsole.log('\\x1b[32m%s\\x1b[0m', 'Account Connected.')\r\n\t\t\t\tmainMenu()\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t'\\x1b[31m%s\\x1b[0m',\r\n\t\t\t\t\t'Your account is already linked to another device. You can only run the script on one device. \\n Contact the developer or support if you believe this is a mistake.',\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\t} catch (error) {\r\n\t\t//console.error('Error while fetching user details.. \\n ')\r\n\t}\r\n}\r\n\r\nmacroFeature()"]}
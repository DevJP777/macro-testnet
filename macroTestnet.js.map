{"version":3,"sources":["sourceMap"],"names":["path","require","fs","puppeteer","inquirer","settingsUtils","browserUtils","loggingUtils","adbUtils","otherUtils","MetaMask","timeout","Protocol","Exstensions","delay","_0x4886a4","Promise","_0x4fc001","setTimeout","settings","userDataPath","chromeExecPath","StealthPlugin","machineIdSync","executeCommands","_0xefef2d","_0x47ac85","_0x2da1ab","_0x463c8c","console","_0xf78de2","_0x5d8be9","_0x43ad76","_0x207b41","_0x1a8626","_0x4beb36","_0x44cae2","_0x11c253","_0x2495a5","_0xcb5ebd","_0xde6211","_0x11eccf","_0x47cfd3","_0x4f7a4c","_0x258943","_0x27c666","_0x10ec71","_0x1fd0fb","_0x1e0306","_0x4e0959","_0x21b666","_0x59647a","_0x2af5d3","_0x1894d9","_0x239d55","_0x39035e","_0x3b7ab0","_0x136816","_0x27474d","_0x3a1da9","_0x3dd033","_0x59504d","_0x275617","Number","_0x59dd3e","undefined","_0x2f4203","_0x207c20","_0x17b242","goBack","_0x259ca8","_0x3c9e2a","parseInt","_0x89f4e0","_0x25edbd","_0x2b717a","_0x15a2dc","_0xe00867","_0x1b3418","_0x933503","_0x564eb4","_0x480d8a","_0x3e1b02","_0x51c64c","_0x17a7df","_0x3e97cf","_0x3d8954","_0x3e75d1","_0x4d9fd6","userDetail","getUserDetails","getLicenseByKey","main","_0x409a95","_0x17dad0","_0x9b57de","_0x5af1e4","__dirname","_0x431ff2","JSON","_0x216a7d","_0x588adf","_0x401539","_0x8a88f1","_0x68965c","_0x96d36b"],"mappings":"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","sourcesContent":["const path = require('path')\r\nconst fs = require('fs')\r\nconst puppeteer = require('puppeteer-extra')\r\nconst inquirer = require('@inquirer/prompts')\r\nconst settingsUtils = require('./utils/settingsUtils')\r\nconst browserUtils = require('./utils/AutomateUtils')\r\nconst loggingUtils = require('./utils/logging')\r\nconst adbUtils = require('./utils/adbUtils')\r\nconst otherUtils = require('./utils/otherUtils')\r\nconst MetaMask = require('./utils/metamaskUtils')\r\nconst { timeout, Protocol } = require('puppeteer')\r\nconst Exstensions = require('./utils/extensionUtils')\r\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms))\r\nconst settings = settingsUtils.loadSettings('./settings.txt')\r\nconst { userDataPath, chromeExecPath } = settings\r\nconst StealthPlugin = require('puppeteer-extra-plugin-stealth')\r\nconst { machineIdSync } = require('node-machine-id')\r\npuppeteer.use(StealthPlugin())\r\n// Fungsi untuk mendapatkan halaman ekstensi pertama jika belum ada\r\nasync function executeCommands() {\r\n\tconst profiles = await settingsUtils.getProfiles(userDataPath)\r\n\t//console.log(profiles);\r\n\tif (profiles.length === 0) {\r\n\t\tloggingUtils.logMessage('No profiles found in the specified User Data Path.')\r\n\t\treturn\r\n\t}\r\n\r\n\tloggingUtils.logMessage(`Found ${profiles.length} profiles.`)\r\n\r\n\t// Path ke folder 'command'\r\n\tconst commandFolder = './command'\r\n\r\n\t// Membaca daftar file dari folder 'command'\r\n\tconst commandFiles = fs.readdirSync(commandFolder).filter((file) => file.endsWith('.txt'))\r\n\r\n\t// Cek jika folder command tidak kosong\r\n\tif (commandFiles.length === 0) {\r\n\t\tconsole.log('No command files found in the \"command\" folder.')\r\n\t\treturn\r\n\t}\r\n\r\n\t// Menampilkan daftar file command kepada user dengan pencarian interaktif\r\n\tconst selectedFile = await inquirer.search({\r\n\t\tmessage: 'Select Your Command File:',\r\n\t\tsource: (term) => {\r\n\t\t\tconst filteredFiles = commandFiles.filter((file) => file.toLowerCase().includes(term?.toLowerCase() || ''))\r\n\t\t\treturn filteredFiles.map((file) => ({\r\n\t\t\t\tname: file, // Nama file yang akan ditampilkan\r\n\t\t\t\tvalue: file, // Nilai yang akan dipilih\r\n\t\t\t}))\r\n\t\t},\r\n\t\tpageSize: 5, // Menampilkan 5 hasil dalam satu halaman\r\n\t})\r\n\tconsole.log('selectedFile:', selectedFile)\r\n\tif (!selectedFile) {\r\n\t\tconsole.log('No file selected.')\r\n\t\treturn\r\n\t}\r\n\r\n\tconst filePath = path.join(commandFolder, selectedFile)\r\n\r\n\tif (!fs.existsSync(filePath)) {\r\n\t\tconsole.log(`File ${selectedFile} does not exist at the specified path: ${filePath}`)\r\n\t\treturn\r\n\t}\r\n\tconst commands = settingsUtils.loadCommands(`./command/${selectedFile}`)\r\n\tconsole.log('Selected file:', selectedFile)\r\n\tconsole.log('Commands:', commands)\r\n\r\n\tfor (const [indexProfile, profile] of profiles.entries()) {\r\n\t\tconst updatedProfile = profile.replace(/\\\\/g, '/')\r\n\t\tloggingUtils.logMessage(`Starting browser with profile: ${updatedProfile}`)\r\n\t\tconst userDataDir = updatedProfile.replace(/\\/?Profile .+$/, '')\r\n\t\tconst fixedProfile = updatedProfile.split('/').pop()\r\n\t\tconsole.log('fixed profile', fixedProfile)\r\n\t\tconst extensions = settingsUtils.getExtensions(updatedProfile)\r\n\t\t//loggingUtils.logMessage(`Found ${extensions.length} extensions for profile: ${updatedProfile}`)\r\n\t\t//console.log(extensions);\r\n\t\t//console.log(userDataPath);\r\n\t\tconst extensionPaths = extensions.join(',')\r\n\t\t//console.log(extensionPaths);\r\n\r\n\t\tconst browser = await puppeteer.launch({\r\n\t\t\theadless: false,\r\n\t\t\texecutablePath: chromeExecPath,\r\n\t\t\tuserDataDir: userDataDir,\r\n\t\t\tdumpio: true,\r\n\t\t\tprotocolTimeout: 10000,\r\n\t\t\targs: [\r\n\t\t\t\t`--disable-blink-features=AutomationControlled`,\r\n\t\t\t\t`--disable-infobars`,\r\n\t\t\t\t`--profile-directory=${fixedProfile}`,\r\n\t\t\t\t// `--window-size=800,600`\r\n\t\t\t],\r\n\t\t})\r\n\r\n\t\tconst pages = await browser.pages()\r\n\t\tif (pages.length > 1) {\r\n\t\t\tconst blankPage = pages.find((page) => page.url() === 'about:blank')\r\n\t\t\tif (blankPage) {\r\n\t\t\t\tawait blankPage.close() // Menutup halaman kosong\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet page = pages[0] // Halaman pertama yang dibuka\r\n\t\tlet openPages = [page] // Array untuk menyimpan halaman yang terbuka\r\n\t\tlet metaPopup = []\r\n\t\tlet extPages = []\r\n\t\t// await page.setUserAgent(\r\n\t\t// \t'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36',\r\n\t\t// )\r\n\t\tfor (const command of commands) {\r\n\t\t\tconst cleanCommand = command.trim()\r\n\t\t\t//console.log('Cleaned Command: ', cleanCommand)\r\n\t\t\tconst [action, ...params] = cleanCommand.split('=>')\r\n\t\t\tconst metaMask = new MetaMask()\r\n\t\t\tconst extensions = new Exstensions()\r\n\t\t\ttry {\r\n\t\t\t\tswitch (action.trim()) {\r\n\t\t\t\t\tcase 'goto':\r\n\t\t\t\t\t\tloggingUtils.logMessage(`Navigating to ${params[0]}`)\r\n\t\t\t\t\t\tlet url = params[0]\r\n\t\t\t\t\t\tif (!url.startsWith('https://') && !url.startsWith('http://')) {\r\n\t\t\t\t\t\t\turl = `https://${url}`\r\n\t\t\t\t\t\t\tloggingUtils.logMessage(`URL modified to ${url}`)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst response = await page.goto(url, {\r\n\t\t\t\t\t\t\twaitUntil: 'load', // Tunggu hingga halaman sepenuhnya dimuat\r\n\t\t\t\t\t\t\ttimeout: 20000,\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t// Cek jika ada redirect\r\n\t\t\t\t\t\tconst finalUrl = response.url()\r\n\t\t\t\t\t\tloggingUtils.logMessage(`Final URL after redirect: ${finalUrl}`)\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\tcase 'closetab':\r\n\t\t\t\t\t\tloggingUtils.logMessage(`Closing current tab: ${params[0]}`)\r\n\t\t\t\t\t\tif (openPages.length > 0) {\r\n\t\t\t\t\t\t\t// Ambil halaman terakhir (menggunakan indeks)\r\n\t\t\t\t\t\t\tconst pageToClose = openPages[openPages.length - 1]\r\n\r\n\t\t\t\t\t\t\tif (!pageToClose.isClosed()) {\r\n\t\t\t\t\t\t\t\tloggingUtils.logMessage(`Closing page: ${pageToClose.url()}`)\r\n\t\t\t\t\t\t\t\tawait pageToClose.close() // Menutup halaman\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tloggingUtils.logMessage(`Page ${pageToClose.url()} is already closed.`)\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Menghapus halaman terakhir dari array openPages\r\n\t\t\t\t\t\t\topenPages.splice(openPages.length - 1, 1) // Hapus 1 elemen di indeks terakhir\r\n\r\n\t\t\t\t\t\t\t// Memperbarui objek `page` untuk menunjuk ke halaman terakhir yang masih terbuka\r\n\t\t\t\t\t\t\tif (openPages.length > 0) {\r\n\t\t\t\t\t\t\t\tpage = openPages[openPages.length - 1] // Halaman terakhir yang tersisa\r\n\t\t\t\t\t\t\t\tloggingUtils.logMessage(`Updated page to the last open page: ${page.url()}`)\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tpage = null // Tidak ada halaman yang tersisa\r\n\t\t\t\t\t\t\t\tloggingUtils.logMessage('No open pages left. `page` set to null.')\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tloggingUtils.logMessage('No open pages to close.')\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\tcase 'page':\r\n\t\t\t\t\t\tloggingUtils.logMessage(`Page Section`)\r\n\t\t\t\t\t\tconsole.log('Params: ', params)\r\n\t\t\t\t\t\tif (params[0] === 'newpage') {\r\n\t\t\t\t\t\t\t// Membuka halaman baru dan menambahkannya ke array openPages\r\n\t\t\t\t\t\t\tconst newPage = await browserUtils.newPages(browser, params[1])\r\n\t\t\t\t\t\t\topenPages.push(newPage) // Menambahkan halaman baru ke array\r\n\t\t\t\t\t\t\tpage = newPage // Update objek `page` ke halaman baru\r\n\t\t\t\t\t\t\tloggingUtils.logMessage(`Opened new page: ${params[1]}`)\r\n\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t} else if (params[0] === 'switch') {\r\n\t\t\t\t\t\t\t// Mengganti halaman yang aktif\r\n\t\t\t\t\t\t\tif (params[1] >= 0 && params[1] < openPages.length) {\r\n\t\t\t\t\t\t\t\tpage = openPages[params[1] - 1]\r\n\t\t\t\t\t\t\t\tloggingUtils.logMessage(`Switched to page: ${params[1]}`)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t} else if (params[0] === 'goto') {\r\n\t\t\t\t\t\t\tawait page.goto(params[1])\r\n\t\t\t\t\t\t} else if (params[0].trim() === 'wait') {\r\n\t\t\t\t\t\t\tawait delay(Number(params[1].trim() ? params[1].trim() : 1000))\r\n\t\t\t\t\t\t} else if (params[0].trim() === 'refresh') {\r\n\t\t\t\t\t\t\tawait page.reload({ waitUntil: 'load' })\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tloggingUtils.logMessage(`Unknown page command: ${params[0]}`)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak\r\n\r\n\t\t\t\t\tcase 'click':\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tif (params[0] === 'findtext') {\r\n\t\t\t\t\t\t\t\tloggingUtils.logMessage(`Looking for element to click: ${params[2]}`)\r\n\t\t\t\t\t\t\t\tawait browserUtils.findElementByText(page, params[1], params[2])\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconst xpath = params[0].startsWith('//') || params[0].includes('/')\r\n\t\t\t\t\t\t\t\tif (xpath) {\r\n\t\t\t\t\t\t\t\t\tloggingUtils.logMessage(`Looking for element to click by xpath: ${params[0]}`)\r\n\t\t\t\t\t\t\t\t\tawait browserUtils.clickElementXPath(page, params[0], params[1] !== undefined ? Number(params[1]) : 0)\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tawait browserUtils.clickElement(page, params[0], params[1] !== undefined ? Number(params[1]) : 0)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t\tconsole.error(`Failed to click element: ${error.message}`)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\tcase 'type':\r\n\t\t\t\t\t\tloggingUtils.logMessage(`Typing in element: ${params[0]} with text: ${params[1]}`)\r\n\t\t\t\t\t\tif (params[0] === 'bulk') {\r\n\t\t\t\t\t\t\tconst xpath = params[1].startsWith('//') || params[1].includes('/')\r\n\t\t\t\t\t\t\tconst input = otherUtils.getInputFromBulkFile(params[2].trim(), indexProfile)\r\n\t\t\t\t\t\t\tconsole.log(input, 'dari get Input')\r\n\t\t\t\t\t\t\tloggingUtils.logMessage(`Using ${input} from bulk file for profile ${indexProfile + 1}`)\r\n\t\t\t\t\t\t\tif (xpath) {\r\n\t\t\t\t\t\t\t\tawait browserUtils.typeElementXPath(page, params[1], input, params[3] !== undefined ? Number(params[3]) : 0)\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tawait browserUtils.typeElement(page, params[1], input, params[3] !== undefined ? Number(params[3]) : 0)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t} else if (params[0].trim() === 'paste') {\r\n\t\t\t\t\t\t\tawait page.click(params[1].trim())\r\n\t\t\t\t\t\t\tawait page.keyboard.down('Control') // Tekan tombol Control\r\n\t\t\t\t\t\t\tawait page.keyboard.press('V') // Tekan tombol V\r\n\t\t\t\t\t\t\tawait page.keyboard.up('Control')\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tawait browserUtils.typeElementXPath(page, params[0], params[1], params[2] !== undefined ? Number(params[2]) : 0)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak\r\n\r\n\t\t\t\t\tcase 'wait':\r\n\t\t\t\t\t\tloggingUtils.logMessage(`Waiting for ${params[0]} ms`)\r\n\t\t\t\t\t\tif (params[0].trim().toLocaleLowerCase() === 'goback') {\r\n\t\t\t\t\t\t\tawait goBack(page)\r\n\t\t\t\t\t\t} else if (params[0].trim().toLocaleLowerCase() === 'navigation') {\r\n\t\t\t\t\t\t\tawait page.waitForNavigation({\r\n\t\t\t\t\t\t\t\twaitUntil: 'domcontentloaded',\r\n\t\t\t\t\t\t\t\ttimeout: 10000,\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tawait delay(Number(params[0].trim()))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak\r\n\r\n\t\t\t\t\tcase 'screenshot':\r\n\t\t\t\t\t\tloggingUtils.logMessage(`Taking screenshot: ${params[0]}`)\r\n\t\t\t\t\t\tawait page.screenshot({ path: params[0] })\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\tcase 'metamask':\r\n\t\t\t\t\t\tloggingUtils.logMessage(`MetaMask Section`)\r\n\t\t\t\t\t\tloggingUtils.logMessage(`Using password from bulk file for profile ${fixedProfile.split('Profile ')[1]}`)\r\n\t\t\t\t\t\tconsole.log('params: ', params)\r\n\t\t\t\t\t\tif (params[0] === 'connect') {\r\n\t\t\t\t\t\t\tconst metamaskPage = await metaMask.getMetaMaskPage(browser)\r\n\t\t\t\t\t\t\tmetaPopup.push(metamaskPage)\r\n\t\t\t\t\t\t\tif (params[1] === 'bulk') {\r\n\t\t\t\t\t\t\t\t// console.log('hasil params: ',params)\r\n\t\t\t\t\t\t\t\tconst profileNumber = parseInt(fixedProfile.split('Profile ')[1], 10) - 1\r\n\t\t\t\t\t\t\t\tconst password = settingsUtils.getPasswordFromBulkFile(params[2].trim(), 4)\r\n\t\t\t\t\t\t\t\tconsole.log(password, 'dari get password')\r\n\t\t\t\t\t\t\t\tloggingUtils.logMessage(`Using password from bulk file for profile ${fixedProfile.split('Profile ')[1]}`)\r\n\t\t\t\t\t\t\t\tawait metaMask.unlockMetaMask(metamaskPage, password)\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconsole.log('browser dengan index profile ', indexProfile)\r\n\t\t\t\t\t\t\t\tconst metamaskPage = await metaMask.getMetaMaskPage(browser)\r\n\t\t\t\t\t\t\t\tconst password = params[1].trim() // Ganti dengan password MetaMask Anda\r\n\t\t\t\t\t\t\t\tawait metaMask.unlockMetaMask(metamaskPage, password)\r\n\t\t\t\t\t\t\t\t//await page.waitForNavigation({ waitUntil: 'domcontentloaded' });\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (params[0].trim() === 'signature') {\r\n\t\t\t\t\t\t\t// console.log('params: ',params)\r\n\t\t\t\t\t\t\t// console.log('params[0]: ',params[0])\r\n\t\t\t\t\t\t\tconsole.log('signature here')\r\n\t\t\t\t\t\t\tconst metamaskPage = await metaMask.getMetaMaskPage(browser)\r\n\t\t\t\t\t\t\tawait metaMask.confirmSignature(metamaskPage)\r\n\t\t\t\t\t\t\t//await page.waitForNavigation({ waitUntil: 'domcontentloaded' });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\tcase 'extensions':\r\n\t\t\t\t\t\tif (params[0].trim() === 'wait') {\r\n\t\t\t\t\t\t\tawait delay(Number(params[0].trim()))\r\n\t\t\t\t\t\t} else if (params[0].trim() === 'init') {\r\n\t\t\t\t\t\t\tif (params[1].trim() === undefined || '') {\r\n\t\t\t\t\t\t\t\tloggingUtils.logMessage(`Please add extension target page`)\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconst extensionPage = await extensions.getExtensionPage(browser, params[1])\r\n\t\t\t\t\t\t\t\textPages.push(extensionPage)\r\n\t\t\t\t\t\t\t\tawait delay(1000)\r\n\t\t\t\t\t\t\t\tconsole.log(extPages.length, 'length from init')\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t} else if (params[0].trim() === 'close') {\r\n\t\t\t\t\t\t\textPages = []\r\n\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t} else if (params[0].trim() === 'click') {\r\n\t\t\t\t\t\t\tloggingUtils.logMessage('Extension Click Section: ')\r\n\t\t\t\t\t\t\tif (params[1].trim() === 'findtext') {\r\n\t\t\t\t\t\t\t\tconsole.log(`param 3 ${params[2]} param4 ${params[3]}`)\r\n\t\t\t\t\t\t\t\tconsole.log('length dari extpages:', extPages.length)\r\n\t\t\t\t\t\t\t\tawait browserUtils.extClickElementbyText(\r\n\t\t\t\t\t\t\t\t\textPages[extPages.length - 1],\r\n\t\t\t\t\t\t\t\t\tparams[2].trim(),\r\n\t\t\t\t\t\t\t\t\tparams[3].trim(),\r\n\t\t\t\t\t\t\t\t\tparams[4] !== undefined ? Number(params[4]) : 1000,\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconst xpath = params[1].startsWith('//') || params[1].includes('/')\r\n\t\t\t\t\t\t\t\t//console.log('extpages length from click else:', extPages.length)\r\n\t\t\t\t\t\t\t\tif (xpath) {\r\n\t\t\t\t\t\t\t\t\tawait browserUtils.extClickElementXPath(\r\n\t\t\t\t\t\t\t\t\t\textPages[extPages.length - 1],\r\n\t\t\t\t\t\t\t\t\t\tparams[1].trim(),\r\n\t\t\t\t\t\t\t\t\t\tparams[2] !== undefined ? Number(params[2]) : 0,\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tawait browserUtils.extClickElement(\r\n\t\t\t\t\t\t\t\t\t\textPages[extPages.length - 1],\r\n\t\t\t\t\t\t\t\t\t\tparams[1].trim(),\r\n\t\t\t\t\t\t\t\t\t\tparams[2] !== undefined && params[2] !== null && params[2] !== '' ? Number(params[2]) : 0,\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// Handle type actions\r\n\t\t\t\t\t\telse if (params[0] === 'type') {\r\n\t\t\t\t\t\t\tif (params[1] === 'bulk') {\r\n\t\t\t\t\t\t\t\tconst extpage = await metaMask.getMetaMaskPage(browser)\r\n\t\t\t\t\t\t\t\tconst profileNumber = parseInt(fixedProfile.split('Profile ')[1], 10) - 1\r\n\t\t\t\t\t\t\t\tconst input = otherUtils.getInputFromBulkFile(params[3].trim(), profileNumber)\r\n\t\t\t\t\t\t\t\tloggingUtils.logMessage(`Using ${input} from bulk file for ${fixedProfile}`)\r\n\t\t\t\t\t\t\t\tconsole.log(extPages.length, 'length dari extPages bulk type')\r\n\t\t\t\t\t\t\t\tawait browserUtils.extTypeElement(extpage, params[2], input, params[4] !== undefined ? Number(params[4]) : 0)\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tif (params[1].startsWith('//') || params[0].includes('/')) {\r\n\t\t\t\t\t\t\t\t\tawait browserUtils.extTypeElementXPath(\r\n\t\t\t\t\t\t\t\t\t\textPages[extPages.length - 1],\r\n\t\t\t\t\t\t\t\t\t\tparams[1],\r\n\t\t\t\t\t\t\t\t\t\tparams[2],\r\n\t\t\t\t\t\t\t\t\t\tparams[3] !== undefined ? Number(params[3]) : 0,\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// const extpage = await extensions.getExtensionPage(browser)\r\n\t\t\t\t\t\t\t\t\t//extPages.push(extpage)\r\n\t\t\t\t\t\t\t\t\tconsole.log(extPages.length, 'length dari extPages type')\r\n\t\t\t\t\t\t\t\t\tawait browserUtils.extTypeElement(\r\n\t\t\t\t\t\t\t\t\t\textPages[extPages.length - 1],\r\n\t\t\t\t\t\t\t\t\t\tparams[1],\r\n\t\t\t\t\t\t\t\t\t\tparams[2],\r\n\t\t\t\t\t\t\t\t\t\tparams[3] !== undefined ? Number(params[3]) : 0,\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// Handle page actions\r\n\t\t\t\t\t\telse if (params[0].trim().startsWith('page:')) {\r\n\t\t\t\t\t\t\tconst [page, ui] = params[0].trim().split(':')\r\n\t\t\t\t\t\t\tif (page === 'page' && ui) {\r\n\t\t\t\t\t\t\t\tconst extPage = await extensions.getExtensionPage(browser, ui)\r\n\t\t\t\t\t\t\t\textPages.push(extPage)\r\n\t\t\t\t\t\t\t\tconsole.log('connect to extension page')\r\n\t\t\t\t\t\t\t\tif (params[1] === 'connect') {\r\n\t\t\t\t\t\t\t\t\t// Implement connection logic if needed\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconsole.log(`${params[0]} tidak sesuai.. example: page:ui,page:notification,etc`)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\tcase 'adb':\r\n\t\t\t\t\t\tconsole.log('adb here')\r\n\t\t\t\t\t\tconsole.log('params:', params)\r\n\t\t\t\t\t\tif (params[0].trim() === 'changeip') {\r\n\t\t\t\t\t\t\tawait adbUtils.starthotspotProcess()\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\tawait adbUtils.startAdbProcess(params)\r\n\t\t\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\t\t\tconsole.error('Terjadi kesalahan saat memproses signature:', err)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tloggingUtils.logMessage(`Unknown command: ${action}`)\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tloggingUtils.logMessage(`Error executing command: ${command}. Error: ${error.message}`)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Menutup semua halaman yang terbuka\r\n\t\ttry {\r\n\t\t\textPages = []\r\n\t\t\tfor (const page of openPages) {\r\n\t\t\t\tawait page.close()\r\n\t\t\t}\r\n\r\n\t\t\t// Setelah semua halaman ditutup, tutup browser\r\n\t\t\tawait browser.close()\r\n\t\t\tconsole.log('All pages closed and browser exited successfully.')\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(`Error while closing pages: ${error.message}`)\r\n\t\t}\r\n\r\n\t\tloggingUtils.logMessage(`Finished executing commands on profile: ${profile}`)\r\n\t\tconsole.log('\\u001b[1m═══════════════════════════════════════════════════════════════════════════════════════\\u001b[0m')\r\n\t\tconsole.log('\\u001b[1m                              MACRO TESTNET\\u001b[0m')\r\n\t\tconsole.log('\\u001b[1m═══════════════════════════════════════════════════════════════════════════════════════\\u001b[0m\\n')\r\n\t\tconsole.log(\"Want to connect? Here's how:\\n\")\r\n\t\tconsole.log('🔹 Telegram:  [https://t.me/devjp777]')\r\n\t\tconsole.log('🔹 Github:    [https://github.com/DevJP777/macro-testnet]')\r\n\t\tconsole.log('\\u001b[1m═══════════════════════════════════════════════════════════════════════════════════════\\u001b[0m')\r\n\t}\r\n}\r\n\r\nconst userDetail = require('./userDetail')\r\nconst { getUserDetails, getLicenseByKey } = require('./utils/apiService')\r\n\r\nasync function main() {\r\n\t// console.log('\\u001b[1m═══════════════════════════════════════════════════════════════════════════════════════\\u001b[0m')\r\n\t// console.log('\\u001b[1m                              MACRO TESTNET\\u001b[0m')\r\n\t// console.log('\\u001b[1m═══════════════════════════════════════════════════════════════════════════════════════\\u001b[0m\\n')\r\n\t// console.log(\"Want to connect? Here's how:\\n\")\r\n\t// console.log('🔹 Telegram:  [https://t.me/devjp777]')\r\n\t// console.log('🔹 Github:    [https://github.com/DevJP777/macro-testnet]')\r\n\t// console.log('\\u001b[1m═══════════════════════════════════════════════════════════════════════════════════════\\u001b[0m')\r\n\t// await delay(2000)\r\n\t// Memeriksa jika ada data kosong dalam userDetail\r\n\tif (!userDetail.gmail || !userDetail.github || !userDetail.hwid) {\r\n\t\tconsole.log('Some information is missing. Please provide the missing data.')\r\n\r\n\t\t// Minta input jika 'gmail' kosong\r\n\t\tif (!userDetail.gmail) {\r\n\t\t\tconst gmail = await inquirer.input({ message: 'Please enter your Email:' })\r\n\t\t\tuserDetail.gmail = gmail.toLocaleLowerCase()\r\n\t\t}\r\n\r\n\t\t// Minta input jika 'github' kosong\r\n\t\tif (!userDetail.github) {\r\n\t\t\tconst github = await inquirer.input({ message: 'Please enter your Github username:' })\r\n\t\t\tuserDetail.github = github.toLowerCase()\r\n\t\t}\r\n\r\n\t\t// Jika HWID kosong, set nilai hwid\r\n\t\tif (!userDetail.hwid) {\r\n\t\t\tconst hwid = machineIdSync()\r\n\t\t\tuserDetail.hwid = hwid\r\n\t\t}\r\n\r\n\t\t// Menyimpan data ke userDetail.js sebagai file JavaScript\r\n\t\tconst userDetailFilePath = path.join(__dirname, 'userDetail.js')\r\n\t\tconst userDetailContent = `const userDetail = ${JSON.stringify(userDetail, null, 2)};\\n\\nmodule.exports = userDetail;`\r\n\r\n\t\t// Menulis kembali ke userDetail.js\r\n\t\tfs.writeFileSync(userDetailFilePath, userDetailContent, 'utf8')\r\n\r\n\t\tconsole.log('Information has been updated!')\r\n\t} else {\r\n\t\t//console.log('All information is already provided!')\r\n\t}\r\n\ttry {\r\n\t\t// Panggil API untuk mendapatkan detail pengguna berdasarkan Gmail\r\n\t\tconst user = await getUserDetails({ gmail: userDetail.gmail })\r\n\t\t// Pengecekan jika hwid kosong\r\n\t\tif (user.hwid === '') {\r\n\t\t\tconst askLicense = await inquirer.input({ message: 'Please input valid license key:' })\r\n\t\t\tconst licenseKey = askLicense\r\n\t\t\tconst checkLicense = await getLicenseByKey(licenseKey, userDetail.gmail, userDetail.hwid)\r\n\t\t\tif (checkLicense) {\r\n\t\t\t\tconsole.log('\\x1b[32m%s\\x1b[0m', 'License valid! Your account is now active.')\r\n\t\t\t}\r\n\t\t\t// Lakukan tindakan sesuai keinginan Anda jika HWID kosong\r\n\t\t} else {\r\n\t\t\tif (user.hwid === userDetail.hwid) {\r\n\t\t\t\tconsole.log('\\x1b[32m%s\\x1b[0m', 'Account Connected.')\r\n\t\t\t\texecuteCommands().catch((error) => {\r\n\t\t\t\t\tloggingUtils.logMessage(`Fatal error: ${error.message}`)\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t'\\x1b[31m%s\\x1b[0m',\r\n\t\t\t\t\t'Your account is already linked to another device. You can only run the script on one device. \\n Contact the developer or support if you believe this is a mistake.',\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\t} catch (error) {\r\n\t\t//console.error('Error while fetching user details.. \\n ')\r\n\t}\r\n}\r\nmain()\r\n// executeCommands().catch((error) => {\r\n// \tloggingUtils.logMessage(`Fatal error: ${error.message}`)\r\n// })"]}
{"version":3,"sources":["sourceMap"],"names":["timeout","require","puppeteer","StealthPlugin","newPages","_0x4d1afd","_0xc1e056","_0x5eb7d0","console","_0x591207","findElement","_0x3a245a","_0x394b65","_0x18938b","_0x434927","_0x3a86a8","_0x3ac2a3","Array","document","_0x589078","_0x472e79","findElementByText","_0x32020f","_0x2b3e43","_0x343d93","_0x566e3e","_0x185f86","_0x4a499c","_0x515b7d","waitFor","_0xc9eeb6","Promise","_0x5f03c4","setTimeout","goBack","_0x12affe","closePages","_0x5d22e8","extFindElement","_0x3f5ee2","_0x6185ba","_0x110797","_0x18d06c","_0x258311","_0x5e8f90","extClickElementXPath","_0x4cc435","_0x3a3b88","_0x3b7e88","_0x55364b","_0x2ad8d2","_0xc2c2ba","clickElement","_0x4073f","_0xfb2cd7","_0x2a89ba","_0x1b866f","_0x17d41e","_0x522bb6","clickElementXPath","_0x20e268","_0x2ac3ba","_0x34d0cc","_0x1dca1e","_0x31fe03","_0x3896e0","extClickElement","_0x2463e4","_0xb0bec7","_0x4ade71","_0x19a9e6","_0x100dcf","_0x27b61e","_0x4e2030","extClickElementbyText","_0x519e37","_0xe33345","_0x3b136f","_0x24df85","_0x2f933a","_0x503be1","_0x430150","_0x4a8b60","extTypeElement","_0x266fce","_0x183c04","_0x13221f","_0x1fedc9","_0x2b4739","_0x5d1a5e","_0x3c0fc5","_0x443bd0","extTypeElementSync","_0x23004c","_0x3259d7","_0x24f623","_0xacf8c4","_0xe7ab3a","_0xf9dd89","_0x403bf3","_0x40df07","extTypeElementXPath","_0x34bf1c","_0x3c26c5","_0x7d401e","_0x1fd917","_0x1a359a","_0x539e50","typeElement","_0x5529a8","_0x3fc7bf","_0x46938c","_0x263647","_0x3abce0","_0x308a9f","_0x416fee","typeElementXPath","_0x4099b2","_0x2454fa","_0x1cd5f1","_0x3c136","_0xc4c418","_0x2f3d5d","module"],"mappings":"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","sourcesContent":["const { timeout } = require('puppeteer')\r\nconst puppeteer = require('puppeteer-extra')\r\nconst StealthPlugin = require('puppeteer-extra-plugin-stealth')\r\npuppeteer.use(StealthPlugin())\r\n\r\n// Fungsi untuk membuka halaman baru\r\nasync function newPages(browser, param) {\r\n\tconst metamaskPage = await browser.newPage()\r\n\ttry {\r\n\t\tawait metamaskPage.goto(param, {\r\n\t\t\twaitUntil: 'domcontentloaded',\r\n\t\t\ttimeout: 30000,\r\n\t\t})\r\n\t\tconsole.log(`Navigated to page: ${param}`)\r\n\t} catch (err) {\r\n\t\tconsole.log(`Error navigating to ${param}: ${err.message}`)\r\n\t}\r\n\treturn metamaskPage\r\n}\r\n\r\n// Fungsi untuk menemukan elemen berdasarkan keyword\r\nasync function findElement(page, keyword) {\r\n\ttry {\r\n\t\tconst elementHandle = await page.$(keyword)\r\n\t\tif (elementHandle) {\r\n\t\t\tawait elementHandle.click()\r\n\t\t\tconsole.log(`Element found by selector \"${keyword}\" and action executed.`)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst matchingSpan = await page.evaluate((keyword) => {\r\n\t\t\tconst span = Array.from(document.querySelectorAll('span')).find((span) => span.textContent.trim() === keyword)\r\n\t\t\tif (span) {\r\n\t\t\t\tspan.click()\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t\treturn false\r\n\t\t}, keyword)\r\n\r\n\t\tif (!matchingSpan) {\r\n\t\t\tconsole.log(`No element with the text \"${keyword}\" was found to click.`)\r\n\t\t}\r\n\t} catch (error) {\r\n\t\tconsole.error(`Error finding element: ${error.message}`)\r\n\t}\r\n}\r\n\r\nasync function findElementByText(page, selector, keyword) {\r\n\ttry {\r\n\t\t// Pilih elemen span dengan class 'sc-jnOGJG bwWeeV' dan teks 'MetaMask'\r\n\t\t// Tunggu elemen tersebut ada dan cocokkan teks\r\n\t\tconst element = await page.$(selector)\r\n\t\tconsole.log('wait for this:', selector)\r\n\t\tif (element) {\r\n\t\t\tif (keyword !== '' || null) {\r\n\t\t\t\tconst textContent = await page.evaluate((el) => el.textContent.trim(), element)\r\n\t\t\t\t// Jika teks elemen cocok, klik elemen tersebut\r\n\t\t\t\tif (textContent === keyword) {\r\n\t\t\t\t\tconsole.log(`${keyword} ditemukan, klik elemen...`)\r\n\t\t\t\t\tawait element.click() // Klik elemen span\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log('Teks elemen tidak cocok.')\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tawait element.click()\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconsole.log('Elemen dengan class dan teks yang diinginkan tidak ditemukan.')\r\n\t\t}\r\n\t} catch (error) {\r\n\t\tconsole.error('Gagal mengklik MetaMask:', error)\r\n\t}\r\n}\r\n\r\n// Fungsi untuk menunggu selama waktu tertentu\r\nfunction waitFor(ms) {\r\n\tconsole.log(`Waiting for ${ms} ms`)\r\n\treturn new Promise((resolve) => setTimeout(resolve, ms))\r\n}\r\n\r\n// Fungsi untuk menavigasi kembali\r\nasync function goBack(page) {\r\n\tawait page.goBack()\r\n}\r\n\r\n// Fungsi untuk menutup halaman\r\nasync function closePages(page) {\r\n\tawait page.close()\r\n}\r\n\r\n//FIND ELEMENT SELECTOR\r\nasync function extFindElement(page, selector, text) {\r\n\ttry {\r\n\t\t// Menunggu elemen muncul di halaman\r\n\t\tawait page.waitForSelector(selector)\r\n\t\t// Mengambil teks dari elemen yang ditemukan\r\n\t\tconst elementText = await page.$eval(selector, (el) => el.textContent.trim())\r\n\t\tconsole.log(`Text found: \"${elementText}\"`)\r\n\t\t// Memeriksa apakah teks yang ditemukan sesuai dengan yang diinginkan\r\n\t\tif (elementText === text) {\r\n\t\t\tconsole.log(`text \"${text}\" telah ditemukan`)\r\n\t\t} else {\r\n\t\t\tconsole.log('Teks yang ditemukan tidak sesuai')\r\n\t\t}\r\n\t} catch (error) {\r\n\t\tconsole.log(`Error mencari elemen: ${error.message}`)\r\n\t}\r\n}\r\n//EXTENSION CLICK ELEMENT XPATH\r\nasync function extClickElementXPath(page, xpath, wait = 1000) {\r\n\ttry {\r\n\t\t// Menggunakan page.locator dan ::-p-xpath untuk memilih elemen berdasarkan XPath\r\n\t\tconst element = await page.waitForSelector(`::-p-xpath(${xpath})`, { timeout: wait + 1000 })\r\n\t\tconst isClickable = await element.isVisible()\r\n\r\n\t\tif (isClickable) {\r\n\t\t\tawait waitFor(wait)\r\n\t\t\tawait element.click()\r\n\t\t\tconsole.log('Element clicked:', xpath)\r\n\t\t} else {\r\n\t\t\tconsole.log(`Element is not clickable: ${xpath}`)\r\n\t\t}\r\n\t} catch (error) {\r\n\t\tconsole.log('Error:', error.message)\r\n\t}\r\n}\r\n//CLICK ELEMENT CSS\r\nasync function clickElement(page, selector, wait = 1000) {\r\n\ttry {\r\n\t\t// Menunggu elemen untuk tersedia dan dapat diklik\r\n\t\tconst element = await page.waitForSelector(selector, { timeout: wait + 1000 })\r\n\r\n\t\t// Memastikan elemen dapat diklik\r\n\t\tconst isClickable = await element.isVisible()\r\n\r\n\t\tif (isClickable) {\r\n\t\t\t// Tunggu sejenak sebelum mengklik elemen\r\n\t\t\tawait waitFor(wait)\r\n\t\t\tawait element.click()\r\n\t\t\tconsole.log('Element clicked:', selector)\r\n\t\t} else {\r\n\t\t\tconsole.log(`Element is not clickable: ${selector}`)\r\n\t\t}\r\n\t} catch (error) {\r\n\t\tconsole.log('Error:', error.message)\r\n\t}\r\n}\r\n\r\nasync function clickElementXPath(page, xpath, wait = 1000) {\r\n\ttry {\r\n\t\t// Menunggu elemen untuk menjadi tersedia dan dapat diklik\r\n\t\tconst element = await page.waitForSelector(`::-p-xpath(${xpath})`, { timeout: wait + 1000 })\r\n\r\n\t\t// Memastikan elemen dapat diklik\r\n\t\tconst isClickable = await element.isVisible()\r\n\r\n\t\tif (isClickable) {\r\n\t\t\t// Klik elemen\r\n\t\t\tawait waitFor(wait)\r\n\t\t\tawait element.click()\r\n\t\t\tconsole.log('Element clicked:', xpath)\r\n\t\t} else {\r\n\t\t\tconsole.log(`Element is not clickable: ${xpath}`)\r\n\t\t}\r\n\t} catch (error) {\r\n\t\tconsole.log('Error:', error.message)\r\n\t}\r\n}\r\n\r\n//CLICK ELEMENT SELECTOR\r\nasync function extClickElement(page, selector, wait = 1000) {\r\n\ttry {\r\n\t\t// Menunggu selector muncul dalam waktu tertentu (misalnya 5000ms)\r\n\t\tconst element = await page.waitForSelector(selector, { timeout: wait + 1000 })\r\n\r\n\t\t// Pastikan elemen dapat diklik\r\n\t\tconst isClickable = await page.$eval(selector, (el) => !el.disabled && el.offsetParent !== null)\r\n\r\n\t\tif (isClickable) {\r\n\t\t\t// Jika elemen bisa diklik, lakukan klik\r\n\t\t\tawait waitFor(wait)\r\n\t\t\tawait element.click({ force: true })\r\n\t\t\tconsole.log('Element clicked:', selector)\r\n\t\t} else {\r\n\t\t\t// Jika elemen tidak dapat diklik (misalnya, disabled atau tersembunyi)\r\n\t\t\tconsole.log(`Element is not clickable: ${selector}`)\r\n\t\t}\r\n\t} catch (error) {\r\n\t\t// Menangkap kesalahan jika elemen tidak ditemukan atau ada masalah lainnya\r\n\t\tconsole.log(`No element found for selector: ${selector}`)\r\n\t\tconsole.log('Error message:', error.message)\r\n\t}\r\n}\r\n//CLICK TEXT ELEMENT SELECTOR\r\nasync function extClickElementbyText(page, selector, text, wait = 1000) {\r\n\ttry {\r\n\t\t// Menunggu selector muncul\r\n\t\tconst element = await page.waitForSelector(selector, { timeout: wait + 1000 })\r\n\t\t// Mengambil teks dari elemen yang ditemukan\r\n\t\tconst elementText = await page.$eval(selector, (el) => el.textContent.trim())\r\n\t\tconsole.log(`Text found: \"${elementText}\"`)\r\n\t\t// Memeriksa apakah teks yang ditemukan sesuai\r\n\t\tif (elementText === text) {\r\n\t\t\t// Jika cocok, klik elemen\r\n\t\t\tawait waitFor(wait)\r\n\t\t\tawait element.click()\r\n\t\t\tconsole.log(`text \"${text}\" telah ditemukan dan diklik`)\r\n\t\t} else {\r\n\t\t\tconsole.log('Teks yang ditemukan tidak sesuai')\r\n\t\t}\r\n\t} catch (error) {\r\n\t\tconsole.log(`Error while clicking by text: ${error.message}`)\r\n\t}\r\n}\r\n//TYPE ELEMENT SELECTOR\r\nasync function extTypeElement(page, selector, text, wait = 0) {\r\n\ttry {\r\n\t\t// Menunggu selector muncul\r\n\t\tconst element = await page.waitForSelector(selector, { timeout: wait + 1000 })\r\n\r\n\t\t// Pastikan elemen adalah input atau textarea yang dapat diketik\r\n\t\tconst isInputElement = await page.$eval(selector, (el) => el.tagName === 'INPUT' || el.tagName === 'TEXTAREA')\r\n\r\n\t\tif (isInputElement) {\r\n\t\t\t// Mengetik teks ke dalam elemen\r\n\t\t\tawait waitFor(wait)\r\n\t\t\tawait element.type(text, { delay: 50 }) // Optional: Delay untuk mengetik tiap karakter\r\n\t\t\tconsole.log(`Teks \"${text}\" telah diketik ke dalam elemen ${selector}`)\r\n\t\t} else {\r\n\t\t\tconsole.log(`Elemen ${selector} bukan input atau textarea`)\r\n\t\t}\r\n\t} catch (error) {\r\n\t\tconsole.log(`Error while typing in element: ${error.message}`)\r\n\t}\r\n}\r\n\r\nfunction extTypeElementSync(page, selector, text, wait = 0) {\r\n\ttry {\r\n\t\t// Menunggu selector muncul tanpa async/await\r\n\t\twaitFor(wait)\r\n\t\tconst element = page.waitForSelector(selector, { timeout: wait + 1000 })\r\n\r\n\t\t// Pastikan elemen adalah input atau textarea yang dapat diketik\r\n\t\tconst isInputElement = page.$eval(selector, (el) => el.tagName === 'INPUT' || el.tagName === 'TEXTAREA')\r\n\r\n\t\tif (isInputElement) {\r\n\t\t\t// Mengetik teks ke dalam elemen tanpa async/await\r\n\t\t\telement.type(text, { delay: 50 }) // Tidak menunggu sampai typing selesai\r\n\t\t\tconsole.log(`Teks \"${text}\" telah diketik ke dalam elemen ${selector}`)\r\n\t\t} else {\r\n\t\t\tconsole.log(`Elemen ${selector} bukan input atau textarea`)\r\n\t\t}\r\n\t} catch (error) {\r\n\t\tconsole.log(`Error while typing in element: ${error.message}`)\r\n\t}\r\n}\r\n\r\n//TYPE ELEMENT XPATH\r\nasync function extTypeElementXPath(page, xpath, text, wait = 1000) {\r\n\ttry {\r\n\t\t// Menunggu elemen berdasarkan XPath dengan menggunakan selector khusus '::-p-xpath'\r\n\t\tconst element = await page.waitForSelector(`::-p-xpath(${xpath})`, { timeout: wait + 1000 })\r\n\r\n\t\t// Mendapatkan elemen berdasarkan XPath\r\n\r\n\t\t// Memastikan elemen ditemukan\r\n\t\tif (element) {\r\n\t\t\tawait waitFor(wait)\r\n\t\t\t// Ketik teks ke dalam elemen\r\n\t\t\tawait element.type(text, { delay: 50 }) // Optional: Delay untuk mengetik tiap karakter\r\n\t\t\tconsole.log(`Teks \"${text}\" telah diketik ke dalam elemen dengan xpath: ${xpath}`)\r\n\t\t} else {\r\n\t\t\tconsole.log(`Elemen dengan xpath ${xpath} tidak ditemukan.`)\r\n\t\t}\r\n\t} catch (error) {\r\n\t\tconsole.log(`Error while typing in element: ${error.message}`)\r\n\t}\r\n}\r\n//TYPE ELEMENT SELECTOR\r\nasync function typeElement(page, selector, text, wait = 1000) {\r\n\ttry {\r\n\t\t// Menunggu elemen berdasarkan CSS selector\r\n\t\tconst element = await page.waitForSelector(selector, { timeout: wait + 2000 })\r\n\r\n\t\t// Memastikan elemen ditemukan\r\n\t\tif (element) {\r\n\t\t\t// Tunggu untuk waktu tertentu (delay sebelum mengetik)\r\n\t\t\tawait new Promise((resolve) => setTimeout(resolve, wait)) // Tunggu sebelum mengetik\r\n\r\n\t\t\t// Ketik teks ke dalam elemen\r\n\t\t\tawait element.type(text, { delay: 50 }) // Optional: Delay untuk mengetik tiap karakter\r\n\t\t\tconsole.log(`Teks \"${text}\" telah diketik ke dalam elemen dengan selector: ${selector}`)\r\n\t\t} else {\r\n\t\t\tconsole.log(`Elemen dengan selector ${selector} tidak ditemukan.`)\r\n\t\t}\r\n\t} catch (error) {\r\n\t\tconsole.log(`Error while typing in element: ${error.message}`)\r\n\t}\r\n}\r\n\r\n//TYPE ELEMENT XPATH\r\nasync function typeElementXPath(page, xpath, text, wait = 1000) {\r\n\ttry {\r\n\t\t// Menunggu elemen berdasarkan XPath dengan menggunakan selector khusus '::-p-xpath'\r\n\t\tconst element = await page.waitForSelector(`::-p-xpath(${xpath})`, { timeout: wait + 2000 })\r\n\r\n\t\t// Mendapatkan elemen berdasarkan XPath\r\n\r\n\t\t// Memastikan elemen ditemukan\r\n\t\tif (element) {\r\n\t\t\t// Tunggu untuk waktu tertentu (delay sebelum mengetik)\r\n\t\t\tawait waitFor(wait) // Tunggu sebelum mengetik\r\n\r\n\t\t\t// Ketik teks ke dalam elemen\r\n\t\t\tawait element.type(text, { delay: 50 }) // Optional: Delay untuk mengetik tiap karakter\r\n\t\t\tconsole.log(`Teks \"${text}\" telah diketik ke dalam elemen dengan xpath: ${xpath}`)\r\n\t\t} else {\r\n\t\t\tconsole.log(`Elemen dengan xpath ${xpath} tidak ditemukan.`)\r\n\t\t}\r\n\t} catch (error) {\r\n\t\tconsole.log(`Error while typing in element: ${error.message}`)\r\n\t}\r\n}\r\nmodule.exports = {\r\n\tnewPages,\r\n\ttypeElement,\r\n\ttypeElementXPath,\r\n\tclickElement,\r\n\tclickElementXPath,\r\n\tfindElement,\r\n\tfindElementByText,\r\n\twaitFor,\r\n\tgoBack,\r\n\tclosePages,\r\n\textFindElement,\r\n\textClickElement,\r\n\textClickElementXPath,\r\n\textClickElementbyText,\r\n\textTypeElement,\r\n\textTypeElementSync,\r\n\textTypeElementXPath,\r\n}"]}